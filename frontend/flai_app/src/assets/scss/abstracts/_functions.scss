// Used for creating the source string for fonts using @font-face
// from https://gist.github.com/fabricelejeune/bcdd3d4725d4e4cea672
@function font-source-declaration($font-family, $file-path, $file-formats) {
  $src: ();

  $formats-map: (
    otf: '#{file-path}.otf' format('opentype'),
    eot:   '#{$file-path}.eot?#iefix' format('embedded-opentype'),
    woff2: '#{$file-path}.woff2' format('woff2'),
    woff:  '#{$file-path}.woff' format('woff'),
    ttf:   '#{$file-path}.ttf' format('truetype'),
    svg:   '#{$file-path}.svg##{$font-family}' format('svg')
  );

  @each $key, $values in $formats-map {
    @if contains($file-formats, $key) {
      $file-path: nth($values, 1);
      $font-format: nth($values, 2);
      $src: append($src, font($file-path) $font-format, comma);
    }
  }

  @return $src;
}

// map deep get function
// from https://gist.github.com/fabricelejeune/bcdd3d4725d4e4cea672
@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    @if type-of($map) != "map" {
      @warn '`#{$map}` is not a map.';
      @return false;
    }
    $map: map-get($map, $key);
  }

  @return $map;
}

// contains function
// from https://gist.github.com/fabricelejeune/bcdd3d4725d4e4cea672
@function contains($list, $values...) {
  @each $value in $values {
    @if type-of(index($list, $value)) != 'number' {
      @return false;
    }
  }

  @return true;
}
