.hidden {
  display: none !important;
}


$left-column-width: calc($button-Sec-width-Small * 2);
$right-column-width: calc(100vw - $left-column-width);
$webcam-height: calc(100vh - ($h2 * 1.3 + 2 * $padding-height) - $sign-div-height - $padding-height - ($medium * 1.5 + 2 * $padding-height) - ($button-Prim-height-Small + 2 * $button-margin));

.learning-exercise {
  background-color: $main-white;
  margin: 0 $margin-width;
  padding: 0;
  height: 100vh;

  h2 {
    text-align: center;
    color: $main-blue;
    padding: $padding-height $padding-width;
    
  }

  .align-left {
    text-align: left;
  }

  .status {
    padding: $padding-height 0;
  }

  .loading-screen {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: $main-blue;
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    p {
      text-align: center;
      padding: $padding-height $padding-width;
    }

    ol {
      text-align: center;
      list-style-position: inside;
    }

    .exit {
      position: absolute;
      bottom: $margin-height;
      left: $margin-width;
      cursor: pointer;
    }
  }
  
  // In many iterations with grid, flexbox and float I decided to hardcode the heights with calculations and variables, otherwise the video will always be too big or the buttons not fit to video width. The calculations are long but pretty flexible, because the only hardcoded value is the line-height right now.
  @media (min-width: $S) {
    .watch-word {
      display: flex;
      flex-direction: row;
      height: 100vh;
      
      .status:after {
        content: "";
        display:inline-block;
      }

      h2 {
        text-align: left;
        //width same as height of video
        width: $webcam-height;
        margin-right: 0;
        margin-left: auto;
        padding-left: 0; //overwrite padding
        padding-right: 0; //overwrite padding
      }
      h2:after {
        content: "";
        display: inline-block;
      }

      .column1 {
        flex: 50%;
        height: 100vh;
        padding-right: $padding-width;      

        .status {
          text-align: left;
          margin-right: 0;
          margin-left: auto;
        }

        .sign-controls {
          margin-right: 0;
          margin-left: auto;
          //width same as height of video
          width: $webcam-height;
        }

        .video-column {
          margin-right: 0;
          margin-left: auto;
          height: calc(100vh - ($h2 * 1.3 + 2 * $padding-height) - $sign-div-height - $padding-height);
          //width same as height of video
          width: $webcam-height;

          .video {
            margin-right: 0;
            margin-left: auto;
            //height minus all other elements, their margins and paddings. will not work without calculated height
            height: $webcam-height;
          }
        }
      }

      .column2 {
        flex: 50%;
        height: 100vh;
        padding-right: $padding-width;

        .status {
          margin-top: calc($h2 * 1.3 + 2 * $padding-height);
          height: $sign-div-height;
          align-items: center;
          display: flex;
          justify-content: end;
          text-align: right;
          //width same as height of video
          width: $webcam-height;
        }

        .webcam-container {
          height: $webcam-height;
        }

        .exercise-controls {
          //width same as height of video
          width: $webcam-height;
          display: flex;
          justify-content: end;
        }
      }
    }
  }

  .show-word {
    display: flex;
    flex-direction: row;
    height: 100vh;
    //manually center because column 2 fills the screen no matter its flexsize/width 
    padding: 0 calc((100vw - $left-column-width -  $padding-width * 2 - $webcam-height) / 2);
    gap: $padding-width;

    h2 {
      text-align: left;
      margin-right: 0;
      margin-left: auto;
      padding-left: 0; //overwrite padding
      padding-right: 0; //overwrite padding
      width: 100%;
    }

    .flex {
      flex: $left-column-width;
      width: $left-column-width;
      display: flex;

      .column1 {
        flex: $left-column-width;
        width: $left-column-width;
        height: 100vh;
        
        h2 {
          width: $left-column-width;
        }

        .video-column {
          width: $left-column-width;
        }
        .status {
          height: $sign-div-height;
          width: $left-column-width;
          align-items: center;
          display: flex;
          text-align: right;
        }

        .video {
          width: $left-column-width;
        }
        .video-controls {
          width: $left-column-width;
        }
      }
    }

    .column2 {
      flex: $webcam-height;
      height: 100vh;
      //heading as padding
      padding-top: calc($h2 * 1.3 + 2 * $padding-height);
      width: $webcam-height;

      .sign-with-icon {
        width: $webcam-height;
      }

      .webcam-container {
        height: $webcam-height;
        width: $webcam-height;
      }
      .exercise-controls {
        //width same as height of video
        width: $webcam-height;
        display: flex;
        justify-content: end;
        .sec_small_button_blue {
          margin-right: 0;
        }
      }
    }
  }
}

